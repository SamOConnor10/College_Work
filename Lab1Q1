drop table if exists toys, toy_cars, toy_teddies;

-- Parent table for common attributes
CREATE TABLE toys (
    toy_id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    type VARCHAR(50) NOT NULL
);

select * from toys;

-- Child table for toy cars
CREATE TABLE toy_cars (
    toy_id INT REFERENCES toys(toy_id) ON DELETE CASCADE,
    engine_size VARCHAR(50),
    petrol_or_diesel VARCHAR(50),
    PRIMARY KEY (toy_id)
);

select * from toy_cars;

-- Child table for teddy bears
CREATE TABLE toy_teddies (
    toy_id INT REFERENCES toys(toy_id) ON DELETE CASCADE,
    material VARCHAR(50),
    age VARCHAR(10),
    PRIMARY KEY (toy_id)
);

select * from toy_teddies;

-- Insert sample data
INSERT INTO toys (name, price, type) VALUES ('Toy Car', 19.99, 'Car');
INSERT INTO toy_cars (toy_id, engine_size, petrol_or_diesel) VALUES (1, 'small', 'petrol');

INSERT INTO toys (name, price, type) VALUES ('Teddy Bear', 15.99, 'Teddy');
INSERT INTO toy_teddies (toy_id, material, age) VALUES (2, 'plush', '3+');

-- Query example to retrieve all toy information
SELECT t.name, t.price, tc.engine_size, tc.petrol_or_diesel, tt.material, tt.age
FROM toys t
LEFT JOIN toy_cars tc ON t.toy_id = tc.toy_id
LEFT JOIN toy_teddies tt ON t.toy_id = tt.toy_id;
